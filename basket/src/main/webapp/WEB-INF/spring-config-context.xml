<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <cache:annotation-driven />

    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
                    <property name="name" value="gameCache"></property>
                </bean>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
                    <property name="name" value="rankingCache"></property>
                </bean>
            </set>
        </property>
    </bean>

    <!-- the service we want to make cacheable -->
    <bean id="rankingService" class="be.chiroelzestraat.services.RankingServiceImpl"/>
    <bean id="gameService" class="be.chiroelzestraat.services.GameServiceImpl"/>

    <!-- cache definitions -->
    <cache:advice id="cacheAdvice" cache-manager="cacheManager">
        <cache:caching cache="rankingCache">
            <cache:cache-evict method="getRankings" all-entries="true"/>
        </cache:caching>
        <cache:caching cache="gameCache">
            <cache:cache-evict method="getGames" all-entries="true" />
            <cache:cache-evict method="getSpecificGames" all-entries="true" />
        </cache:caching>
    </cache:advice>

</beans>